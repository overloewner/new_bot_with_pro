# modules/telegram/handlers/main_handler.py
"""–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥."""

from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from shared.events import event_bus, Event, USER_COMMAND_RECEIVED
from modules.telegram.keyboards.main_keyboards import MainKeyboards

import logging

logger = logging.getLogger(__name__)


class MainHandler:
    """–ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞."""
    
    def __init__(self):
        self.router = Router()
        self.keyboards = MainKeyboards()
    
    def register(self, dp):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
        # –ö–æ–º–∞–Ω–¥—ã
        self.router.message(Command("start"))(self.cmd_start)
        self.router.message(Command("help"))(self.cmd_help)
        self.router.message(Command("status"))(self.cmd_status)
        
        # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        self.router.callback_query(F.data == "main_menu")(self.show_main_menu)
        
        # –ú–æ–¥—É–ª–∏
        self.router.callback_query(F.data == "price_alerts")(self.show_price_alerts)
        self.router.callback_query(F.data == "gas_tracker")(self.show_gas_tracker)
        self.router.callback_query(F.data == "whale_tracker")(self.show_whale_tracker)
        self.router.callback_query(F.data == "wallet_tracker")(self.show_wallet_tracker)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        self.router.callback_query(F.data == "settings")(self.show_settings)
        self.router.callback_query(F.data == "about")(self.show_about)
        
        dp.include_router(self.router)
    
    async def cmd_start(self, message: types.Message):
        """–ö–æ–º–∞–Ω–¥–∞ /start."""
        await event_bus.publish(Event(
            type=USER_COMMAND_RECEIVED,
            data={
                "user_id": message.from_user.id,
                "command": "start",
                "username": message.from_user.username
            },
            source_module="telegram"
        ))
        
        welcome_text = (
            "ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Crypto Monitor Bot!</b>\n\n"
            
            "üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥—É–ª–∏:</b>\n"
            "üìà <b>Price Alerts</b> - –¶–µ–Ω–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
            "‚õΩ <b>Gas Tracker</b> - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≥–∞–∑–∞ Ethereum\n"
            "üêã <b>Whale Tracker</b> - –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫–∏—Ç–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ)\n"
            "üëõ <b>Wallet Tracker</b> - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ—à–µ–ª—å–∫–æ–≤ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ)\n\n"
            
            "‚ö†Ô∏è <b>–í–∞–∂–Ω–æ:</b> –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏–∑-–∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö API"
        )
        
        keyboard = self.keyboards.get_main_menu_keyboard()
        await message.answer(welcome_text, reply_markup=keyboard, parse_mode="HTML")
    
    async def cmd_help(self, message: types.Message):
        """–ö–æ–º–∞–Ω–¥–∞ /help."""
        help_text = (
            "üìñ <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
            
            "<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            "/status - –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π\n\n"
            
            "<b>üìà Price Alerts:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ü–µ–Ω\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã\n"
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä\n\n"
            
            "<b>‚õΩ Gas Tracker:</b>\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω—ã –≥–∞–∑–∞ Ethereum\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –ø–æ—Ä–æ–≥–∞\n"
            "‚Ä¢ –¢–µ–∫—É—â–∏–µ —Ü–µ–Ω—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n"
            
            "<b>üêã Whale Tracker (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ):</b>\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∫—Ä—É–ø–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ ETH –ø–µ—Ä–µ–≤–æ–¥—ã >100 ETH\n"
            "‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ 1-2 –±–ª–æ–∫–∞\n\n"
            
            "<b>üëõ Wallet Tracker (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ):</b>\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2-5 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ ETH —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n\n"
            
            "‚ùì <b>–í–æ–ø—Ä–æ—Å—ã?</b> –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"
        )
        
        keyboard = self.keyboards.get_help_keyboard()
        await message.answer(help_text, reply_markup=keyboard, parse_mode="HTML")
    
    async def cmd_status(self, message: types.Message):
        """–ö–æ–º–∞–Ω–¥–∞ /status."""
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏—è
        status_text = (
            "üìä <b>–°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π</b>\n\n"
            
            "üìà Price Alerts: üü¢ –ê–∫—Ç–∏–≤–µ–Ω\n"
            "‚õΩ Gas Tracker: üü¢ –ê–∫—Ç–∏–≤–µ–Ω\n"
            "üêã Whale Tracker: üü° –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n"
            "üëõ Wallet Tracker: üü° –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n\n"
            
            "üîÑ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Å–µ–π—á–∞—Å"
        )
        
        keyboard = self.keyboards.get_status_keyboard()
        await message.answer(status_text, reply_markup=keyboard, parse_mode="HTML")
    
    async def show_main_menu(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
        text = (
            "üè† <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
            
            "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        )
        
        keyboard = self.keyboards.get_main_menu_keyboard()
        await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
        await callback.answer()
    
    async def show_price_alerts(self, callback: types.CallbackQuery):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–æ–¥—É–ª—é —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤."""
        # –ü—É–±–ª–∏–∫—É–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –º–æ–¥—É–ª—è price_alerts
        await event_bus.publish(Event(
            type="telegram.show_module",
            data={
                "module": "price_alerts",
                "user_id": callback.from_user.id,
                "callback": callback
            },
            source_module="telegram"
        ))
        
        await callback.answer()
    
    async def show_gas_tracker(self, callback: types.CallbackQuery):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–æ–¥—É–ª—é –≥–∞–∑ —Ç—Ä–µ–∫–µ—Ä–∞."""
        # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º–æ–¥—É–ª–µ
        text = (
            "‚õΩ <b>Gas Tracker</b>\n\n"
            "–ú–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω—ã –≥–∞–∑–∞ Ethereum\n\n"
            "üîÑ <b>–°—Ç–∞—Ç—É—Å:</b> –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
            "üìÖ <b>–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:</b> –°–∫–æ—Ä–æ"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer("‚õΩ Gas Tracker —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!")
    
    async def show_whale_tracker(self, callback: types.CallbackQuery):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–æ–¥—É–ª—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–∏—Ç–æ–≤."""
        text = (
            "üêã <b>Whale Tracker</b> (–û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)\n\n"
            
            "‚ö†Ô∏è <b>–í–∞–∂–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ ETH —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–Ω–µ ERC-20)\n"
            "‚Ä¢ –ó–∞–¥–µ—Ä–∂–∫–∞ 1-2 –±–ª–æ–∫–∞ (~30-60 —Å–µ–∫)\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –∫–∏—Ç–æ–≤\n"
            "‚Ä¢ –õ–∏–º–∏—Ç API: 5 –∑–∞–ø—Ä–æ—Å–æ–≤/—Å–µ–∫\n\n"
            
            "‚úÖ <b>–ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
            "‚Ä¢ –ö—Ä—É–ø–Ω—ã–µ ETH –ø–µ—Ä–µ–≤–æ–¥—ã (>100 ETH)\n"
            "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—É–º–º–µ\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n"
            
            "üí∞ <b>–î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –Ω—É–∂–Ω—ã –ø–ª–∞—Ç–Ω—ã–µ API</b>"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìä –ú–æ–∏ –∞–ª–µ—Ä—Ç—ã", callback_data="whale_alerts")
        builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–ª–µ—Ä—Ç", callback_data="whale_add")
        builder.button(text="‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è—Ö", callback_data="whale_limitations")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_wallet_tracker(self, callback: types.CallbackQuery):
        """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –º–æ–¥—É–ª—é –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤."""
        text = (
            "üëõ <b>Wallet Tracker</b> (–°–∏–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)\n\n"
            
            "üö´ <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n"
            "‚Ä¢ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2-5 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –¢–æ–ª—å–∫–æ ETH —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n"
            "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º 5 –∫–æ—à–µ–ª—å–∫–æ–≤\n\n"
            
            "‚úÖ <b>–ß—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—à–µ–ª—å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É\n"
            "‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π\n"
            "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Å—É–º–º–µ\n\n"
            
            "üí∞ <b>–î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω—É–∂–Ω–∞ Ethereum –Ω–æ–¥–∞</b>"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üëõ –ú–æ–∏ –∫–æ—à–µ–ª—å–∫–∏", callback_data="wallet_list")
        builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–æ—à–µ–ª–µ–∫", callback_data="wallet_add")
        builder.button(text="üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—à–µ–ª–µ–∫", callback_data="wallet_check")
        builder.button(text="‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", callback_data="wallet_limitations")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_settings(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        text = (
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n"
            
            "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b> –í–∫–ª—é—á–µ–Ω—ã\n"
            "üåê <b>–Ø–∑—ã–∫:</b> –†—É—Å—Å–∫–∏–π\n"
            "üìä <b>–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö:</b> –û–±—ã—á–Ω—ã–π\n\n"
            
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö."
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="settings_notifications")
        builder.button(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="settings_stats")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_about(self, callback: types.CallbackQuery):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ."""
        text = (
            "‚ÑπÔ∏è <b>–û –±–æ—Ç–µ</b>\n\n"
            
            "ü§ñ <b>Crypto Monitor Bot v2.0</b>\n"
            "üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: 2024\n\n"
            
            "üìã <b>–ú–æ–¥—É–ª–∏:</b>\n"
            "‚Ä¢ Price Alerts - –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n"
            "‚Ä¢ Gas Tracker - –ü–æ–ª–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n"  
            "‚Ä¢ Whale Tracker - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n"
            "‚Ä¢ Wallet Tracker - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ\n\n"
            
            "‚ö†Ô∏è <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n"
            "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –∏–∑-–∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö API\n\n"
            
            "üí° <b>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:</b> –ú–æ–¥—É–ª—å–Ω—ã–π –º–æ–Ω–æ–ª–∏—Ç\n"
            "üîß <b>–ì–æ—Ç–æ–≤ –∫ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—é</b>"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìù Changelog", callback_data="about_changelog")
        builder.button(text="üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="about_tech")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
