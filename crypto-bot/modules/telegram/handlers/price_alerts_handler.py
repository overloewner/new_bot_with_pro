# modules/telegram/handlers/price_alerts_handler.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤ –¥–ª—è Telegram."""

from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from shared.events import event_bus, Event

import logging

logger = logging.getLogger(__name__)


class PriceAlertsHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤."""
    
    def __init__(self):
        self.router = Router()
        
        # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
        event_bus.subscribe("telegram.show_module", self._handle_show_module)
    
    def register(self, dp):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤
        self.router.callback_query(F.data == "price_alerts_menu")(self.show_price_alerts_menu)
        self.router.callback_query(F.data == "price_create_preset")(self.create_preset)
        self.router.callback_query(F.data == "price_my_presets")(self.show_my_presets)
        self.router.callback_query(F.data == "price_active_presets")(self.show_active_presets)
        self.router.callback_query(F.data == "price_settings")(self.show_settings)
        
        dp.include_router(self.router)
    
    async def _handle_show_module(self, event: Event):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥—É–ª—è."""
        if event.data.get("module") == "price_alerts":
            callback = event.data.get("callback")
            if callback:
                await self.show_price_alerts_menu(callback)
    
    async def show_price_alerts_menu(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –º–µ–Ω—é —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤."""
        text = (
            "üìà <b>Price Alerts</b>\n\n"
            
            "–ú–æ–¥—É–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å –ø–æ–ª–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º:\n\n"
            
            "‚úÖ <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n"
            "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–æ–≤ –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–∞—Ä\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è\n"
            "‚Ä¢ –í—ã–±–æ—Ä —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤ (1m, 5m, 15m, 1h, 4h, 1d)\n"
            "‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ–±—ä–µ–º—É —Ç–æ—Ä–≥–æ–≤\n"
            "‚Ä¢ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ WebSocket\n\n"
            
            "üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            "‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤: 0\n"
            "‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–µ—Å–µ—Ç–æ–≤: 0\n"
            "‚Ä¢ –ê–ª–µ—Ä—Ç–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: 0"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ—Å–µ—Ç", callback_data="price_create_preset")
        builder.button(text="üìã –ú–æ–∏ –ø—Ä–µ—Å–µ—Ç—ã", callback_data="price_my_presets")
        builder.button(text="üü¢ –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ—Å–µ—Ç—ã", callback_data="price_active_presets")
        builder.button(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="price_settings")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def create_preset(self, callback: types.CallbackQuery):
        """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–µ—Å–µ—Ç–∞."""
        text = (
            "‚ûï <b>–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞</b>\n\n"
            
            "–ü—Ä–µ—Å–µ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω –¥–ª—è –≥—Ä—É–ø–ø—ã —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø–∞—Ä.\n\n"
            
            "<b>–®–∞–≥–∏ —Å–æ–∑–¥–∞–Ω–∏—è:</b>\n"
            "1Ô∏è‚É£ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞\n"
            "2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø–∞—Ä—ã\n"
            "3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º\n"
            "4Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è\n\n"
            
            "üöÄ <b>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</b>"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üöÄ –ù–∞—á–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ", callback_data="price_start_creation")
        builder.button(text="üìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", callback_data="price_creation_help")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="price_alerts_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_my_presets(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –≤—Å–µ—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        text = (
            "üìã <b>–ú–æ–∏ –ø—Ä–µ—Å–µ—Ç—ã</b>\n\n"
            
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤.\n\n"
            
            "–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Å–µ—Ç –¥–ª—è –Ω–∞—á–∞–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ü–µ–Ω!"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="‚ûï –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—ã–π –ø—Ä–µ—Å–µ—Ç", callback_data="price_create_preset")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="price_alerts_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_active_presets(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤."""
        text = (
            "üü¢ <b>–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–µ—Å–µ—Ç—ã</b>\n\n"
            
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–µ—Å–µ—Ç–æ–≤.\n\n"
            
            "–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Ü–µ–Ω."
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìã –í—Å–µ –ø—Ä–µ—Å–µ—Ç—ã", callback_data="price_my_presets")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="price_alerts_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()
    
    async def show_settings(self, callback: types.CallbackQuery):
        """–ü–æ–∫–∞–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ü–µ–Ω–æ–≤—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤."""
        text = (
            "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Price Alerts</b>\n\n"
            
            "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b> –í–∫–ª—é—á–µ–Ω—ã\n"
            "üìä <b>–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –∞–ª–µ—Ä—Ç–æ–≤:</b> –í–∫–ª—é—á–µ–Ω–∞\n"
            "‚è±Ô∏è <b>–ö—É–ª–¥–∞—É–Ω:</b> 60 —Å–µ–∫—É–Ω–¥\n"
            "üìà <b>–§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π:</b> –ü–æ–¥—Ä–æ–±–Ω—ã–π\n\n"
            
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="price_notif_settings")
        builder.button(text="üìä –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π", callback_data="price_format_settings")
        builder.button(text="‚è±Ô∏è –ö—É–ª–¥–∞—É–Ω –∞–ª–µ—Ä—Ç–æ–≤", callback_data="price_cooldown_settings")
        builder.button(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="price_alerts_menu")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup(), parse_mode="HTML")
        await callback.answer()